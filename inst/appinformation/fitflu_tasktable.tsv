"TaskID"	"TaskText"	"RecordID"	"Record"	"Type"	"Note"	"QuizID"	"AppTitle"	"AppID"	"Answer"
1	"The population of New York City in 1918 was roughly around 5E6 individuals. Use that number as your initial starting value for the susceptibles. Set infected individuals to 1, no initial dead. The model parameters, _b_, _g_, and _f_, are being fit. Even though they are being fit/estimated, we need to provide starting values for the fitting routine. Set the starting value for the infection rate to _b=1e-6_, set the initial recovery rate such that it corresponds to an infectious period of one week, and start with the assumption that one percent of individuals died.

For each fitted parameter, choose some lower and upper bounds. Note that if the lower bound is not lower/equal and the upper, not higher/equal than the starting value of the parameter, you will get an error message when you try to run the model. For now, we ignore the option to generate simulated data. Therefore set usesimdata to 0 and the parameter values for simulated data can be arbitrary, they will be ignored. The noise parameter will also be ignored. We'll fit the data 'as is' (not the log-transformed data), so set logfit to 0. Start with a maximum of 1 fitting step/iteration and solver type 1. Run the simulation. Since you only do a single iteration, nothing is optimized. We are just doing this so you can see the time-series produced with these starting conditions. The 'best fit' parameter values are the same you started with. To that end, with that choice, your SSR should be 7.3E12."	"T1R1"	"Nothing"	"None"	""	"dsaide_fitflu"	"Fitting Influenza data"	"fitflu"	""
2	"Set the maximum number of iterations to 50, and re-run the simulation. All of the other settings should be the same from task 1. Look at the results. The plot shows the final fit. The model-predicted curve for deaths will be closer to the data. Also, the SSR value should have gone down, to 5.6E11, indicating a better fit. Also printed below the figure are the values of the fitted parameters at the end of the fitting process. Set the iterations to 100, and re-run the simulation. You should see further improvement in SSR, to 3.6E11. That indicates the previous fit was not the best fit. (The best fit is the one with the lowest possible SSR)."	"T2R1"	"Estimate for parameter f (fraction dying) after 50 iterations."	"Numeric"	"Round to two significant digits, report as non-scientic notation (as X.YZ)"	"dsaide_fitflu"	"Fitting Influenza data"	"fitflu"	""
2	"Set the maximum number of iterations to 50, and re-run the simulation. All of the other settings should be the same from task 1. Look at the results. The plot shows the final fit. The model-predicted curve for deaths will be closer to the data. Also, the SSR value should have gone down, to 5.6E11, indicating a better fit. Also printed below the figure are the values of the fitted parameters at the end of the fitting process. Set the iterations to 100, and re-run the simulation. You should see further improvement in SSR, to 3.6E11. That indicates the previous fit was not the best fit. (The best fit is the one with the lowest possible SSR)."	"T2R2"	"Estimate for parameter f (fraction dying) after 100 iterations."	"Numeric"	"Round to two significant digits, report as non-scientic notation (as X.YZ)"	"dsaide_fitflu"	"Fitting Influenza data"	"fitflu"	""
3	"Repeat the fits for 1, 50 and 100 iterations using solver/optimizer number 2, then number 3. Keep all other settings as before. You will notice that the different solvers do not give the same results. The reason for that is that different solvers are improving fits at different rates. Unfortunately, there is not always a single best optimizer. It depends on the problem/system. Thus it's usually good to try multiple optimizers. Depending on the speed of your computer, you can try to increase the number of iterations and see what best fit (smallest SSR) you can achieve. 

Generally, with increasing iterations, the fits get better. A fitting step or iteration is essentially an attempt by the underlying code to find the best possible model. Increasing the tries usually improves the fit. In practice, one should not specify a fixed number of iterations. We do it here, so things run reasonably fast. Instead, one should ask the solver to run as long as it takes until it can't find a way to improve the fit (can't further reduce the SSR). The technical expression for this is that the solver has converged to the solution. This can be done with the solver used here (`nloptr` R package), but it would take too long, so we implement a hard stop after the specified number of iterations."	"T3R1"	"Estimate for parameter f (fraction dying) after 100 iterations, solver 2."	"Numeric"	"Round to three significant digits, report as non-scientic notation (as N.XYZ)"	"dsaide_fitflu"	"Fitting Influenza data"	"fitflu"	""
3	"Repeat the fits for 1, 50 and 100 iterations using solver/optimizer number 2, then number 3. Keep all other settings as before. You will notice that the different solvers do not give the same results. The reason for that is that different solvers are improving fits at different rates. Unfortunately, there is not always a single best optimizer. It depends on the problem/system. Thus it's usually good to try multiple optimizers. Depending on the speed of your computer, you can try to increase the number of iterations and see what best fit (smallest SSR) you can achieve. 

Generally, with increasing iterations, the fits get better. A fitting step or iteration is essentially an attempt by the underlying code to find the best possible model. Increasing the tries usually improves the fit. In practice, one should not specify a fixed number of iterations. We do it here, so things run reasonably fast. Instead, one should ask the solver to run as long as it takes until it can't find a way to improve the fit (can't further reduce the SSR). The technical expression for this is that the solver has converged to the solution. This can be done with the solver used here (`nloptr` R package), but it would take too long, so we implement a hard stop after the specified number of iterations."	"T3R2"	"Estimate for parameter f (fraction dying) after 100 iterations, solver 3."	"Numeric"	"Round to three significant digits, report as non-scientic notation (as N.XYZ)"	"dsaide_fitflu"	"Fitting Influenza data"	"fitflu"	""
