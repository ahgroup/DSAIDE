"TaskID"	"TaskText"	"RecordID"	"Record"	"Type"	"Note"	"QuizID"	"AppTitle"	"AppID"	"Answer"
1	"We'll start with an outbreak in the absence of control. Set the model to 1000 initial susceptible, 1 infected, no recovered. Set the recovery rate, _g_, such that it corresponds to an infectiousness duration of 5 days. Set the infectiousness rate _b_ such that the model has a reproductive number, R~0~, of 4. Keep the intervention level, _f_, at 0 for now. Set _tmax_ and _tnew_ to 100. Values for _tstart_ and _tend_ do not matter since _f_ is 0. Run the simulation. You should get an outbreak with around 20 susceptibles left at the end."	"T1R1"	"Nothing"	"None"	""	"dsaide_idcontrolmultioutbreak"	"ID control for multiple outbreaks"	"idcontrolmultioutbreak"	""
2	"First without running the simulation and using what you know about R~0~ and how it relates to the susceptible population size, figure out what the number of susceptibles is (assuming every other parameter stays the same) at which you do not get an outbreak anymore. Now test your expectation by trying different values for _S_. You might have to adjust the simulation time to see this better. This value for _S_ provides a threshold below which we don't get an outbreak. This threshold value is often called the _herd immunity_ or _community immunity_ level. It corresponds to the threshold value of R~0~=1 which you learned about previously."	"T2R1"	"Percent susceptible at which you stop getting an outbreak (herd immunity level)"	"Rounded_Integer"	"Report as integer"	"dsaide_idcontrolmultioutbreak"	"ID control for multiple outbreaks"	"idcontrolmultioutbreak"	""
3	"Compare the herd immunity value for the number of susceptibles with the the number of susceptibles left at the end of the outbreak. You will find that the latter is much less. The outbreak _overshoots_ by depleting more susceptibles than the threshold value. Why is that? Think about what happens at the peak of the outbreak when R~0~ switches from being larger than 1 to smaller than 1. Does the outbreak stop immediately? Why not?"	"T3R1"	"Excess number by which susceptibles drop below herd immunity level"	"Rounded_Integer"	"Report as integer"	"dsaide_idcontrolmultioutbreak"	"ID control for multiple outbreaks"	"idcontrolmultioutbreak"	""
4	"For a single outbreak, more control is better. We looked at at that in the _Basics of ID Control_ app, where we assumed some type of control lowered the transmission rate. We can repeat that here. Set parameters as in task 1. Set _tmax_ and _tnew_ to 200 (so we can see slow outbreaks if they happen). Set control to start at time 0 (_tstart_) and end at 200 (_tend_). That basically means the control is active for the whole duration of the simulation. Slowly increase control, _f_ (e.g. in steps of 0.05). Run the simulation for each value of _f_. As _f_ increases, you should see smaller outbreaks until you hit a value of _f_ for which you don't see outbreaks anymore. Understand how this value of _f_ relates to the reproductive number. You should be able to figure out the exact value for _f_ at which no outbreak happens anymore based on your knowledge of the reproductive number, and how a reduction in transmission (which is what f does) affects it."	"T4R1"	"Number of susceptible at end of outbreak for f=0.5"	"Rounded_Integer"	"Report as integer"	"dsaide_idcontrolmultioutbreak"	"ID control for multiple outbreaks"	"idcontrolmultioutbreak"	""
4	"For a single outbreak, more control is better. We looked at at that in the _Basics of ID Control_ app, where we assumed some type of control lowered the transmission rate. We can repeat that here. Set parameters as in task 1. Set _tmax_ and _tnew_ to 200 (so we can see slow outbreaks if they happen). Set control to start at time 0 (_tstart_) and end at 200 (_tend_). That basically means the control is active for the whole duration of the simulation. Slowly increase control, _f_ (e.g. in steps of 0.05). Run the simulation for each value of _f_. As _f_ increases, you should see smaller outbreaks until you hit a value of _f_ for which you don't see outbreaks anymore. Understand how this value of _f_ relates to the reproductive number. You should be able to figure out the exact value for _f_ at which no outbreak happens anymore based on your knowledge of the reproductive number, and how a reduction in transmission (which is what f does) affects it."	"T4R2"	"Minimum value for f at which no outbreak is possible"	"Numeric"	"Report 2 decimals"	"dsaide_idcontrolmultioutbreak"	"ID control for multiple outbreaks"	"idcontrolmultioutbreak"	""
5	"The idea that more control is better also applies if control is only applied during a certain period of the outbreak. Let's explore that by repeating the previous task, but now with control starting 10 days after the beginning of the outbreak and ending 120 days later (tend=130). Slowly increase control, in steps of 0.1, starting at 0. Run the simulation for each value of _f_. Since you don't start control at the beginning, you will always see an outbreak starting, but it will be reduced once control starts, with a higher reduction as _f_ increases."	"T5R1"	"Number of susceptible at end of outbreak for f=0.5"	"Rounded_Integer"	"Report as integer"	"dsaide_idcontrolmultioutbreak"	"ID control for multiple outbreaks"	"idcontrolmultioutbreak"	""
6	"Doing the previous tasks, you will have noticed that timing of the outbreak matters, the earlier you start the better. Play around a bit with different start and end time for the control and different strengths to explore how they impact the size of the outbreaks you get and how much _overshoot_ you get, i.e. by how much the final number of susceptible is below the herd immunity level."	"T6R1"	"Nothing"	"None"	""	"dsaide_idcontrolmultioutbreak"	"ID control for multiple outbreaks"	"idcontrolmultioutbreak"	""
7	"As you explored different start- and end-times and strengths for control in the previous task, you might have noticed that occasionally you can get the infected numbers to come back up once control is stopped. Let's explore a bit more how to apply optimal control if there is a chance of multiple outbreaks, either because the pathogen did not get completely wiped out in a specific community, or there are ongoing re-introduction of the pathogen from the outside. Set control to start at time 10 and end at 50. Assume no new infected persons enter the population by setting both total simulation time and _tmax_ and _tend_ to 200 days. All of the other settings as in the previous task. Slowly increase control, _f_ and run the simulation for the different values of _f_. Initially, things look as before. But once you reach a certain level of control, you will see that a second outbreak occurs and the total number of susceptibles drops again. To explore this in more detail, set f=0.6 and f=0.7 and try to understand why in one case you only get a single outbreak and in the other you get 2. To get the values for susceptible at t=50 it is easiest to switch to a plotly plot and read them off. Try to figure out how the number of susceptible when control is stopped relates to _R~0~_ and how that relates to the fact that you do or don't see another outbreak."	"T7R1"	"Number of susceptible at end of control (t=50) for f=0.6"	"Rounded_Integer"	"Report as integer"	"dsaide_idcontrolmultioutbreak"	"ID control for multiple outbreaks"	"idcontrolmultioutbreak"	""
7	"As you explored different start- and end-times and strengths for control in the previous task, you might have noticed that occasionally you can get the infected numbers to come back up once control is stopped. Let's explore a bit more how to apply optimal control if there is a chance of multiple outbreaks, either because the pathogen did not get completely wiped out in a specific community, or there are ongoing re-introduction of the pathogen from the outside. Set control to start at time 10 and end at 50. Assume no new infected persons enter the population by setting both total simulation time and _tmax_ and _tend_ to 200 days. All of the other settings as in the previous task. Slowly increase control, _f_ and run the simulation for the different values of _f_. Initially, things look as before. But once you reach a certain level of control, you will see that a second outbreak occurs and the total number of susceptibles drops again. To explore this in more detail, set f=0.6 and f=0.7 and try to understand why in one case you only get a single outbreak and in the other you get 2. To get the values for susceptible at t=50 it is easiest to switch to a plotly plot and read them off. Try to figure out how the number of susceptible when control is stopped relates to _R~0~_ and how that relates to the fact that you do or don't see another outbreak."	"T7R2"	"Number of susceptible at end of simulation for f=0.6"	"Rounded_Integer"	"Report as integer"	"dsaide_idcontrolmultioutbreak"	"ID control for multiple outbreaks"	"idcontrolmultioutbreak"	""
7	"As you explored different start- and end-times and strengths for control in the previous task, you might have noticed that occasionally you can get the infected numbers to come back up once control is stopped. Let's explore a bit more how to apply optimal control if there is a chance of multiple outbreaks, either because the pathogen did not get completely wiped out in a specific community, or there are ongoing re-introduction of the pathogen from the outside. Set control to start at time 10 and end at 50. Assume no new infected persons enter the population by setting both total simulation time and _tmax_ and _tend_ to 200 days. All of the other settings as in the previous task. Slowly increase control, _f_ and run the simulation for the different values of _f_. Initially, things look as before. But once you reach a certain level of control, you will see that a second outbreak occurs and the total number of susceptibles drops again. To explore this in more detail, set f=0.6 and f=0.7 and try to understand why in one case you only get a single outbreak and in the other you get 2. To get the values for susceptible at t=50 it is easiest to switch to a plotly plot and read them off. Try to figure out how the number of susceptible when control is stopped relates to _R~0~_ and how that relates to the fact that you do or don't see another outbreak."	"T7R3"	"Number of susceptible at end of control (t=50) for f=0.8"	"Rounded_Integer"	"Report as integer"	"dsaide_idcontrolmultioutbreak"	"ID control for multiple outbreaks"	"idcontrolmultioutbreak"	""
7	"As you explored different start- and end-times and strengths for control in the previous task, you might have noticed that occasionally you can get the infected numbers to come back up once control is stopped. Let's explore a bit more how to apply optimal control if there is a chance of multiple outbreaks, either because the pathogen did not get completely wiped out in a specific community, or there are ongoing re-introduction of the pathogen from the outside. Set control to start at time 10 and end at 50. Assume no new infected persons enter the population by setting both total simulation time and _tmax_ and _tend_ to 200 days. All of the other settings as in the previous task. Slowly increase control, _f_ and run the simulation for the different values of _f_. Initially, things look as before. But once you reach a certain level of control, you will see that a second outbreak occurs and the total number of susceptibles drops again. To explore this in more detail, set f=0.6 and f=0.7 and try to understand why in one case you only get a single outbreak and in the other you get 2. To get the values for susceptible at t=50 it is easiest to switch to a plotly plot and read them off. Try to figure out how the number of susceptible when control is stopped relates to _R~0~_ and how that relates to the fact that you do or don't see another outbreak."	"T7R4"	"Number of susceptible at end of simulation for f=0.8"	"Rounded_Integer"	"Report as integer"	"dsaide_idcontrolmultioutbreak"	"ID control for multiple outbreaks"	"idcontrolmultioutbreak"	""
8	"Run the simulation with the previous settings for _f_ going from 0.5 to 0.7 in steps of 0.05. For each control level, record the number of susceptibles left at the end of the simulation. Based on that, what do you conclude about the impact of different levels of control on the outcome? What seems to be the best level of control, and why?"	"T8R1"	"Value of _f_ among those you tried for which control is best"	"Numeric"	"Report two decimals"	"dsaide_idcontrolmultioutbreak"	"ID control for multiple outbreaks"	"idcontrolmultioutbreak"	""
9	"In the previous task, control ends while there are still a few infected around, which can lead to a second outbreak. An alternative scenario is one where control ends after infected are gone, but then a newly infected person enters the population. We can explore this scenario, as well. Using parameter settings as previously, change control to start at time 10 (_tstart_) and end at 110 (_tend_). Set _tmax_ and _tnew_ to 400. Run the simulation for control strength _f=0.8_. You should see a single outbreak with around 475 susceptibles left. You learned above that this value of susceptible is not low enough for herd immunity, thus you can get a second outbreak. This is not happening here since the infected dropped to 0, so when control is ended, there is no chance a new outbreak can start. However, that changes if newly infected enter the population. To simulate this, set _tnew=50_, then run the simulation again. A new infected person is no introduced every 50 days. At times 50 and 100, control is still in effect, so they have no impact. But at day 150, there is no control, so this person can spark a new outbreak, which is what you see."	"T9R1"	"Number of susceptible at end of control (t=110)"	"Rounded_Integer"	"Report as integer"	"dsaide_idcontrolmultioutbreak"	"ID control for multiple outbreaks"	"idcontrolmultioutbreak"	""
9	"In the previous task, control ends while there are still a few infected around, which can lead to a second outbreak. An alternative scenario is one where control ends after infected are gone, but then a newly infected person enters the population. We can explore this scenario, as well. Using parameter settings as previously, change control to start at time 10 (_tstart_) and end at 110 (_tend_). Set _tmax_ and _tnew_ to 400. Run the simulation for control strength _f=0.8_. You should see a single outbreak with around 475 susceptibles left. You learned above that this value of susceptible is not low enough for herd immunity, thus you can get a second outbreak. This is not happening here since the infected dropped to 0, so when control is ended, there is no chance a new outbreak can start. However, that changes if newly infected enter the population. To simulate this, set _tnew=50_, then run the simulation again. A new infected person is no introduced every 50 days. At times 50 and 100, control is still in effect, so they have no impact. But at day 150, there is no control, so this person can spark a new outbreak, which is what you see."	"T9R2"	"Number of susceptible at end of simulation"	"Rounded_Integer"	"Report as integer"	"dsaide_idcontrolmultioutbreak"	"ID control for multiple outbreaks"	"idcontrolmultioutbreak"	""
10	"Open exploration: In a setting like this, where multiple outbreaks are possible and one cannot apply control for a long enough time to drive the disease extinct (or get a vaccine or some other new intervention), the best one can do is implement control to get the susceptible to drop to herd immunity while minimizing the _overshoot_, i.e. the excess drop of susceptible below herd immunity. This can be accomplished in different ways. Play around with start- and end-times for control and control strength to explore ways you can minimize the outbreak. You can also alter transmission or recovery rate to change _R~0~_ and see how that changes results. An option that is not possible with this simulation but could be done in real life is adaptive control by changing the control strength. You could mimic it by running a simulation with control at some level, then use the end values of the simulation as starting values with new control, etc. That's a bit tedious to do through the graphical interface but would not be too hard if you interacted with the simulation function directly through code."	"T10R1"	"Nothing"	"None"	""	"dsaide_idcontrolmultioutbreak"	"ID control for multiple outbreaks"	"idcontrolmultioutbreak"	""
