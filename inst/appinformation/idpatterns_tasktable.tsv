"quizID"	"AppTitle"	"AppID"	"TaskID"	"TaskText"	"RecordID"	"Record"	"Type"	"Note"	"Answer"	"Fuzzy"	"Review"
"dsaide_"	"ID Patterns"	"idpatterns"	1	"A) Run the simulation with A population size, _S~0~_, of 1000, , 1 initially infected and presymptomatic host, simulation duration (approximately) 10 years. Assume that only symptomatic individuals transmit, at rate _b~I~_ = 0.002 and that there is no seasonal variation. Assume that the duration of the presymptomatic, asymptomatic and symptomatic periods are all 5 days long. (Hint: The parameters _g~P~_, _g~A~_, and _g~I~_ are the inverses of these periods.) Assume that the duration of the symptomatic period is 1 month long. (Hint: The parameter _g~I~_ is the inverse of this period.) Assume that the duration of the presymptomatic period is approximately 6 days long. (Make sure you convert units correctly. You can assume that a month is roughly 30 days.) Assume that there are no asymptomatic infections. You can, therefore, set the rate of recovery of asymptomatics, _g~A~_ to anything, it doesn't matter because nobody will be asymptomatic. Assume nobody dies due to disease, immunity does not wane, no births, and no natural deaths. If you did it correctly, you should get a single outbreak with around 203 susceptibles left at the end."	"T1R1"	"Nothing"	"None"	""	""	0	0
"dsaide_"	"ID Patterns"	"idpatterns"	2	"A) Next, turn on births and deaths. It's always good to check parts of a model. Here, we want to first look at births and deaths in the absence of disease. Therefore, set initial number of presymptomatic to 0, keep the number of susceptible at 1000. Set the natural mortality rate, _m_, to a value that corresponds to an average lifespan of 41 years. Recall that the unit of _m_ needs to be in 1/months. You need to convert lifespan to months, then take the inverse to get the death rate. Round to the first significant digit (i.e. 0.00X). Set the birth rate to _n=4_ per month. Also increase the simulation duration to 1000 years. (Depending on the speed of your computer, it will take several seconds for the simulation to finish).
B) It is possible to compute the steady state population size of susceptibles in the absence of infection, by setting the differential equation for S to 0 and solving for S as a function of birth and death parameters. Compute this equation (you should get something like _S=.._ with the right side involving parameters _m_ and _n_. Then stick in the values for the parameters from the previous task and compute _S_ at steady state. Make sure it's the same you get from the simulation (once it has settled down to a steady state)."	"T2R1"	"Total number susceptibles at steady state"	"Numeric"	"Report the rounded integer"	""	1	0
"dsaide_"	"ID Patterns"	"idpatterns"	3	"A) Now set _S~0~_ = 3000, keep everything else unchanged. Run the simulation and note what you get for the final, steady-state population size. Try out different values for the initial number of susceptibles and see what happens. 
B) Set population size back to 1000, now try out different values for the birth and death rates, specifically, set _n=2_ and _m=0.002_ and _n=6_ and _m=0.003_. For each setting, think about what you expect to see, based on your intuition and based on the theory/math, i.e. the equation from the previous task, and compare with the simulation results. "	"T3R1"	"Total number susceptible at steady state (part A; _S~0~=3000_)"	"Numeric"	"Report the rounded integer"	""	0	0
"dsaide_"	"ID Patterns"	"idpatterns"	3	"A) Now set _S~0~_ = 3000, keep everything else unchanged. Run the simulation and note what you get for the final, steady-state population size. Try out different values for the initial number of susceptibles and see what happens. 
B) Set population size back to 1000, now try out different values for the birth and death rates, specifically, set _n=2_ and _m=0.002_ and _n=6_ and _m=0.003_. For each setting, think about what you expect to see, based on your intuition and based on the theory/math, i.e. the equation from the previous task, and compare with the simulation results. "	"T3R2"	"Total number susceptible at steady state (part B; _n=2_ and _m=0.002_)"	"Numeric"	"Report the rounded integer"	""	0	0
"dsaide_"	"ID Patterns"	"idpatterns"	3	"A) Now set _S~0~_ = 3000, keep everything else unchanged. Run the simulation and note what you get for the final, steady-state population size. Try out different values for the initial number of susceptibles and see what happens. 
B) Set population size back to 1000, now try out different values for the birth and death rates, specifically, set _n=2_ and _m=0.002_ and _n=6_ and _m=0.003_. For each setting, think about what you expect to see, based on your intuition and based on the theory/math, i.e. the equation from the previous task, and compare with the simulation results. "	"T3R3"	"Total number susceptible at steady state (part B; _n=6_ and _m=0.003_)"	"Numeric"	"Report the rounded integer"	""	0	0
"dsaide_"	"ID Patterns"	"idpatterns"	4	"A) Now, set the birth and death rate as in task #2 and also adjust the population size to the steady state value you found in task #2. We do that because we don't want a mixing of underlying population growth/decline dynamics on top if the ID dynamics. That would make it more complicated to understand what's going on. (You get to do that later). Ensure that if you run the simulation now, nothing changes. Now introduce an infected individual (_P0=1_), with other values as set in task #1. If needed, adjust the simulation duration to see the initial pattern and ensure everything reaches steady state. What do you expect to see? Run the simulation, compare expectations with results."	"T4R1"	"Nothing"	"None"	""	""	0	0
"dsaide_"	"ID Patterns"	"idpatterns"	5	"A) It is possible to compute the steady state values for the model variables at the endemic scenario, i.e. when the number of infected is non-zero. This computation is a bit messy for the model above because it has the extra _P_ and _A_ states that make the math more complicated (you can try for yourself as a challenge after you've done the simple model we'll do next.) To keep the math simpler, we consider a simplified approximation of the above model. Since the way we have set our parameters so far, individuals spend a very short time in _P_ compared to _I_, so we can ignore the _P_ compartment and assume that individuals directly go from _S_ to _I_. Further, for our parameter choices, nobody enters _A_ and _D_, so we can ignore those compartments too. This produces the following simpler SIR model:

$$ S = n -   b_I IS - m S $$ 
$$ I = b_I SI - g_I I - m I $$ 
$$ R =  g_I I  - m R$$

Following the procedure above for computing the steady state for _S_ in the absence of a pathogen, now compute the endemic steady state by setting the left side of the equations to 0 and solving for the variables _S_, _I_ and _R_ as functions of model parameters only. You should get _S=(g~I~ + m)/b~I~ _ and similar equations for _I_ and _R_. For more on steady state calculations, see e.g. [@vynnycky10] or [@keeling08] (but note that each of those references uses their own notation which is not the same as used here.)
B) Let's compare the model simulations with the equations you found. Substitute the parameter values from the task above into the equations and confirm that you get the approximately the same results as you get from running the model to steady state."	"T5R1"	"Nothing"	"None"	""	""	0	0
"dsaide_"	"ID Patterns"	"idpatterns"	6	"A) The patterns we've seen so far are oscillations/cycles (i.e. repeated outbreaks) that eventually settle down to a steady state. The oscillations are what is often referred to as _intrinsic_, purely produced by the interplay between depletion of susceptibles due to infection and replenishment due to birth. Waning immunity is another mechanism of resource replenishment. To investigate that, set everything back as in task #1 (i.e. no more births and deaths). Do a quick run to ensure you get a single outbreak.
B) Now, assume that immunity wanes within on average 10 months and set simulation time for 100 years. Think about your expectations, run the simulation and check with what you expected. Double the _duration_ of immunity. What do you expect? What do you see?"	"T6R1"	"Total number recovered at the end (part B; 10 Months)"	"Numeric"	"Report the rounded integer"	""	0	0
"dsaide_"	"ID Patterns"	"idpatterns"	6	"A) The patterns we've seen so far are oscillations/cycles (i.e. repeated outbreaks) that eventually settle down to a steady state. The oscillations are what is often referred to as _intrinsic_, purely produced by the interplay between depletion of susceptibles due to infection and replenishment due to birth. Waning immunity is another mechanism of resource replenishment. To investigate that, set everything back as in task #1 (i.e. no more births and deaths). Do a quick run to ensure you get a single outbreak.
B) Now, assume that immunity wanes within on average 10 months and set simulation time for 100 years. Think about your expectations, run the simulation and check with what you expected. Double the _duration_ of immunity. What do you expect? What do you see?"	"T6R2"	"Total number susceptible at steady state (part B; 20 Months)"	"Numeric"	"Report the rounded integer"	""	0	0
"dsaide_"	"ID Patterns"	"idpatterns"	7	"A) Take the SIR model from above, add the terms describing waning immunity, and use this new set of equations to again solve for the steady states of the model. Then compare the steady state values from the equations with those from the simulations. The equations will directly let you see which variables do and don't change if waning immunity changes. This allows you to confirm what you found in the previous task. This task is challenging! The equations are getting big and ugly. You might want to consider using software that can solve such equations analytically. The free [Maxima software](http://maxima.sourceforge.net/) might be a good option."	"T7R1"	"Nothing"	"None"	""	""	0	0
"dsaide_"	"ID Patterns"	"idpatterns"	8	"A) Now combine births and deaths with waning immunity. Explore how the two different mechanisms interact and influence the observed ID dynamics. Set everything as in the beginning of the previous task. Then, let birth rate _n=10_, natural death rate _m=0.005_, and simulation time of 600 months."	"T8R1"	"Total number of recovered at end of outbreak"	"Numeric"	"Report the rounded integer"	""	0	0
"dsaide_"	"ID Patterns"	"idpatterns"	9	"A) So far, the cycles were due to the intrinsic dynamics of the system. Now we'll explore what happens if some outside phenomenon - e.g. the weather - influences some model parameters. Generally, when running the kind of models we investigate here, the variables change (and each gets its own equation) and the parameters remain fixed during the simulation. Here, we are looking at a model where this is not the case. The model allows you to let the transmission rate parameters vary sinusoidally with a period of 1 year. (It would also be possible to instead give each changing parameter their own equation, but that would be more complicated here). Set everything as in task #1, do a quick run to make sure you only get one outbreak. Now run the model with increasing seasonality by setting s = 0.001, 0.01, 0.1, and 1. How many outbreaks do you observe? What else new is going on? Think about the system and formulate your expectations, then run the model to check."	"T9R1"	"Total number of outbreaks (s = 0.001)"	"Numeric"	"Report integer"	""	0	0
"dsaide_"	"ID Patterns"	"idpatterns"	9	"A) So far, the cycles were due to the intrinsic dynamics of the system. Now we'll explore what happens if some outside phenomenon - e.g. the weather - influences some model parameters. Generally, when running the kind of models we investigate here, the variables change (and each gets its own equation) and the parameters remain fixed during the simulation. Here, we are looking at a model where this is not the case. The model allows you to let the transmission rate parameters vary sinusoidally with a period of 1 year. (It would also be possible to instead give each changing parameter their own equation, but that would be more complicated here). Set everything as in task #1, do a quick run to make sure you only get one outbreak. Now run the model with increasing seasonality by setting s = 0.001, 0.01, 0.1, and 1. How many outbreaks do you observe? What else new is going on? Think about the system and formulate your expectations, then run the model to check."	"T9R2"	"Total number of outbreaks (s = 0.01)"	"Numeric"	"Report integer"	""	0	0
"dsaide_"	"ID Patterns"	"idpatterns"	9	"A) So far, the cycles were due to the intrinsic dynamics of the system. Now we'll explore what happens if some outside phenomenon - e.g. the weather - influences some model parameters. Generally, when running the kind of models we investigate here, the variables change (and each gets its own equation) and the parameters remain fixed during the simulation. Here, we are looking at a model where this is not the case. The model allows you to let the transmission rate parameters vary sinusoidally with a period of 1 year. (It would also be possible to instead give each changing parameter their own equation, but that would be more complicated here). Set everything as in task #1, do a quick run to make sure you only get one outbreak. Now run the model with increasing seasonality by setting s = 0.001, 0.01, 0.1, and 1. How many outbreaks do you observe? What else new is going on? Think about the system and formulate your expectations, then run the model to check."	"T9R3"	"Total number of outbreaks (s = 0.1)"	"Numeric"	"Report integer"	""	0	0
"dsaide_"	"ID Patterns"	"idpatterns"	9	"A) So far, the cycles were due to the intrinsic dynamics of the system. Now we'll explore what happens if some outside phenomenon - e.g. the weather - influences some model parameters. Generally, when running the kind of models we investigate here, the variables change (and each gets its own equation) and the parameters remain fixed during the simulation. Here, we are looking at a model where this is not the case. The model allows you to let the transmission rate parameters vary sinusoidally with a period of 1 year. (It would also be possible to instead give each changing parameter their own equation, but that would be more complicated here). Set everything as in task #1, do a quick run to make sure you only get one outbreak. Now run the model with increasing seasonality by setting s = 0.001, 0.01, 0.1, and 1. How many outbreaks do you observe? What else new is going on? Think about the system and formulate your expectations, then run the model to check."	"T9R4"	"Total number of outbreaks (s = 1)"	"Numeric"	"Report integer"	""	0	0
"dsaide_"	"ID Patterns"	"idpatterns"	10	"A) Assume now that immunity wanes within 10 months. Also, set the strength of seasonal variation to 0.5. Everything else as before. Think about your expectations. Run the model and compare. Adjust the simulation time to _zoom in/out_ by running for both 120 and 1200 months. Explore how prolonging immunity, i.e. decreasing _w_ to 0.05 and 0.01, changes the patterns you see. Repeat the simulations for the 3 values of the immunity parameter at a lower seasonal variation value of s=0.1. Contemplate the main difference between the pattern you now observe and the ones you've seen so far with no external driver."	"T10R1"	"Total number of outbreaks (_w=0.1_, s=0.1, tmax=1200)"	"Numeric"	"Report the rounded integer"	""	0	0
"dsaide_"	"ID Patterns"	"idpatterns"	10	"A) Assume now that immunity wanes within 10 months. Also, set the strength of seasonal variation to 0.5. Everything else as before. Think about your expectations. Run the model and compare. Adjust the simulation time to _zoom in/out_ by running for both 120 and 1200 months. Explore how prolonging immunity, i.e. decreasing _w_ to 0.05 and 0.01, changes the patterns you see. Repeat the simulations for the 3 values of the immunity parameter at a lower seasonal variation value of s=0.1. Contemplate the main difference between the pattern you now observe and the ones you've seen so far with no external driver."	"T10R2"	"Total number of outbreaks (_w=0.05_, s=0.1, tmax=1200)"	"Numeric"	"Report the rounded integer"	""	0	0
"dsaide_"	"ID Patterns"	"idpatterns"	10	"A) Assume now that immunity wanes within 10 months. Also, set the strength of seasonal variation to 0.5. Everything else as before. Think about your expectations. Run the model and compare. Adjust the simulation time to _zoom in/out_ by running for both 120 and 1200 months. Explore how prolonging immunity, i.e. decreasing _w_ to 0.05 and 0.01, changes the patterns you see. Repeat the simulations for the 3 values of the immunity parameter at a lower seasonal variation value of s=0.1. Contemplate the main difference between the pattern you now observe and the ones you've seen so far with no external driver."	"T10R3"	"Total number of outbreaks (_w=0.01_, s=0.1, tmax=1200)"	"Numeric"	"Report the rounded integer"	""	0	0
"dsaide_"	"ID Patterns"	"idpatterns"	11	"A) Keep exploring! You can let people enter the A and D compartments, have an underlying growing or declining population in the absence of disease and let the disease run on top of it, allow for birth/death, waning immunity and seasonality, etc. There is lots to explore. While it can be fun running simulations with random parameters, I suggest a more deliberate exploration. Before you run a simulation, think about what you expect. Then run and compare results with expectations. If they don't agree, try to figure out what's going on. This way, you will gain more and more insight into how the different components and processes influence the observed outcome - the basics of a systems science approach."	"T11R1"	"Nothing"	"None"	""	""	0	0
